// <auto-generated />
using DeveloperSkillsTracker;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeveloperSkillsTracker.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240813115557_databaseChange")]
    partial class databaseChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperSkillsTracker.Database.DimCertification", b =>
                {
                    b.Property<int>("Certification_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Certification_ID"));

                    b.Property<string>("Certification_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Certification");

                    b.Property<int>("User_ID")
                        .HasColumnType("int")
                        .HasColumnName("FK_User_ID");

                    b.HasKey("Certification_ID");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("DeveloperSkillsTracker.Database.DimExperience", b =>
                {
                    b.Property<int>("Experience_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Experience_ID"));

                    b.Property<string>("Experience_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Experience_Title");

                    b.Property<int>("User_ID")
                        .HasColumnType("int")
                        .HasColumnName("FK_User_ID");

                    b.HasKey("Experience_ID");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("DeveloperSkillsTracker.Database.DimSkill", b =>
                {
                    b.Property<int>("Skill_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Skill_ID"));

                    b.Property<string>("Skill_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Skill");

                    b.Property<int>("User_ID")
                        .HasColumnType("int")
                        .HasColumnName("FK_User_ID");

                    b.HasKey("Skill_ID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("DeveloperSkillsTracker.Database.DimUser", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Username");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
